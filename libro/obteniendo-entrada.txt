
Obteniendo la entrada

Hasta donde hemos visto, un método como puts escribe a pantalla, ¿pero como hace uno para aceptar el ingreso de parte del usuario? Para esto son útiles gets(obtiene una cadena) y chomp. El ejemplo p005methods.rb a continuación ilustra lo mismo.

STDOUT es una constante global que contiene la salida estandar actual del programa. flush elimina cualquier información alojada en el buffer del sistema operativo subyacente (esta es una operación de buffering interna de Ruby). Su uso no es obligatorio pero es recomendable.

gets acepta una linea simple de datos desde la entrada estandar - el teclado en este caso. La entrada estandar es provista por muchos sistemas operativos, y se refiere al modo por defecto de aceptar ingreso por parte del usuario. En nuestro caso, la entrada estandar es el teclado.

chomp es un método string y gets unicamente obtiene cadenas desde tu teclado. De este modo, gets devuelve una cadena con un caracter ‘\n’, y chomp remueve este ‘\n’



EN RAILS:  Los datos viene de muchos orígenes. En una aplicación Rails típìca, provienen de la base de datos. Como desarrollador Rails, es posible que te encuentres a ti mismo usando algunas de estas facilidades, debido a que Rails realiza la obtención de datos por ti. Cuando tus usuarios interactúen con el teclado, usualmente lo harán en un formulario Web.






